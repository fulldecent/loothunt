{"version":3,"file":"static/webpack/static/development/pages/index.js.fef5b354032bbfcf0a4e.hot-update.js","sources":["webpack:///./pages/index.jsx"],"sourcesContent":["import React, { Component } from 'react'\n// Layouts\nimport Layout from '../layouts/Layout'\n// Components\nimport Missions from '../components/Missions/Missions'\n// Assets\nimport rawMissions from '../assets/missions/missions.json'\n// Utils\nimport eth from '../eth'\nimport abiUtils from '../utils/abiUtils'\n// Constants\nimport { NULL_ADDRESS } from '../utils/constants'\n\nclass IndexPage extends Component {\n  constructor() {\n    super()\n    this.state = {\n      missions: rawMissions.map(m => ({\n        ...abiUtils.decodeMission(m.order),\n        ...m,\n      }))\n    }\n  }\n\n  async componentWillReceiveProps(props) {\n    const { missions } = this.state\n    const newMissions = missions.map(m => ({ ...m, fetching: true }))\n\n    if (props.selectedAddress !== NULL_ADDRESS) {\n      this.setState({ missions: newMissions })\n\n      for (let i = 0, l = missions.length; i < l; i += 1) {\n        eth.getRequirementAchieved(missions[i].order, props.selectedAddress)\n          .then(requirementAchieved => {\n            newMissions[i].fetching = false\n            newMissions[i].requirementAchieved = requirementAchieved\n            this.setState({ missions: newMissions })\n          })\n        eth.getFilled(missions[i].order)\n          .then(filled => {\n            console.log(`${i} filled: ${filled}`)\n          })\n      }\n    }\n  }\n\n  onGetReward = async (misisonIndex) => {\n    const { missions } = this.state\n    const newMissions = missions\n\n    try {\n      const { tx, txSignature } = await eth.signZeroExTransaction(\n        newMissions[misisonIndex].order,\n        newMissions[misisonIndex].orderSignature,\n      )\n\n      const { txHash } = await eth.sendExecuteTransaction(tx, txSignature)\n\n      newMissions[misisonIndex].txHash = txHash\n\n      this.setState({ missions: newMissions })\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  render() {\n    const { missions } = this.state\n\n    return <Layout {...this.props}>\n      <Missions title=\"ðŸ”¥ LootHunt Airdrop\" missions={missions} onGetReward={this.onGetReward} />\n    </Layout>\n  }\n}\n\nexport default IndexPage"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgCA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAKA;AAAA;AALA;AAAA;AACA;AADA;AAAA;AAUA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAfA;AAAA;AACA;AADA;AAAA;AAAA;AAgBA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAjCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAFA;AAQA;AACA;;;;;;AACA;;;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAbA;AACA;AAEA;AAAA;AAWA;AACA;AACA;;;;;;;;;;;;;;;;;AAsBA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;AA3DA;AACA;AA6DA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}